# docker-compose.yml
name: local
services:
    
  wiremock:
    image: wiremock/wiremock:latest
    container_name: WireMock
    ports:
      - "52000:8080"  # Official image uses port 8080 by default
    volumes:
      - ./WireMock:/home/wiremock/mappings/
    command: ["--read-static-mappings"]
    networks:
      - local-network

  moto:
    image: motoserver/moto:latest
    container_name: Moto
    ports:
      - "52001:5000"
    environment:
      - MOTO_COGNITO_IDP_USER_POOL_ID_STRATEGY=HASH
      - MOTO_ENABLE_RECORDING=True
      - AWS_ACCESS_KEY_ID='testing'
      - AWS_SECRET_ACCESS_KEY='testing'
      - AWS_SECURITY_TOKEN='testing'
      - AWS_SESSION_TOKEN='testing'
      - AWS_DEFAULT_REGION='us-east-1'
    volumes:
      - local-moto-volume:/home/moto_recording
    networks:
      - local-network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: SqlServer
    ports:
      - "52002:1433"
    volumes:
      - local-sqlserver-volume:/var/opt/mssql
      - ./SqlServer:/var/backups
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=D3v3x2025!
    networks:
      - local-network

  redis:
    image: redis:latest
    container_name: Redis
    ports:
      - "52003:6379"
    volumes:
      - local-redis-volume:/data
    networks:
      - local-network

  seq:
    image: datalust/seq:latest
    container_name: SEQ
    ports:
      - "52004:80"
    volumes:
      - local-seq-volume:/data
    environment:
      - ACCEPT_EULA=Y
    networks:
      - local-network

  grafana:
    image: grafana/grafana:latest 
    container_name: Grafana 
    ports:
      - "52005:3000"
    volumes:
      - local-grafana-volume:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin 
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
    networks:
      - local-network
    restart: unless-stopped

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "52006:4566"
    volumes:
      - local-localstack-volume:/var/lib/localstack
    environment:
      - DEBUG=1
      - SERVICES=s3,sns,kms,sqs,lambda,dynamodb,iam,serverless,ecr,sts,ssm,logs
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - DEFAULT_REGION=us-east-1
    networks:
      - local-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  local-network:
    driver: bridge

volumes:
  local-sqlserver-volume:
    driver: local
  local-redis-volume:
    driver: local
  local-seq-volume:
    driver: local
  local-moto-volume:
    driver: local
  local-grafana-volume:
    driver: local
  local-localstack-volume:
    driver: local